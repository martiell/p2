#!/bin/bash
set -u
set -e

# Directory containing eclipse binary
eclipse=/opt/eclipse
# Directory that should contain the mirrors for each site
repo=/home/martin/p2mirror
# Name of the composite mirror site (XML escaped)
name="Eclipse Update Site Mirrors"

default_sites=( \
  aspectj        http://download.eclipse.org/tools/ajdt/35/update/ \
  mylyn-extras   http://download.eclipse.org/tools/mylyn/update/e3.4/ \
  m2e            http://m2eclipse.sonatype.org/sites/m2e/0.10.2.20100623-1649/ \
  m2e-extras     http://m2eclipse.sonatype.org/sites/m2e-extras \
  m2-tycho       http://repository.sonatype.org/content/repositories/forge-sites/m2eclipse-tycho/0.4.2/S/0.4.2.20100811-1709/
  jgit           http://www.jgit.org/updates/ \
  findbugs       http://findbugs.cs.umd.edu/eclipse/ \
  scala          http://download.scala-ide.org/update-current \
  ucdetector     http://ucdetector.sourceforge.net/update/ \
  hudson         http://hudson-eclipse.googlecode.com/svn/trunk/hudson-update/ \
# eclipsefp      http://eclipsefp.sourceforge.net/updates/site.xml \
)

mirror_site() {
  for type in artifact metadata; do
    $eclipse/eclipse \
      -application org.eclipse.equinox.p2.$type.repository.mirrorApplication \
      -nosplash \
      -source $2 \
      -destination file://$repo/$1 \
      -destinationName "$1 mirror" \
      -verbose \
      -compare
  done
  echo
}

mirror() {
  numSites=$(( ${#sites[*]} / 2 ))
  for (( i = 0; i < $numSites; i++ )) ; do
    alias=${sites[i*2]}
    url=${sites[i*2+1]}
    echo "Mirroring $alias (Step $((i+1)) of $numSites)"
    mirror_site $alias $url
  done
}

timeMillisJava() {
  D=`mktemp -d /tmp/p2mirror.XXXX`
  echo 'class Time{public static void main(String[] s){System.out.println(System.currentTimeMillis());}}' > $D/Time.java
  javac -d $D $D/Time.java
  java -cp $D Time
  rm $D/Time.{java,class}
  rmdir $D
}

timeMillis() {
  if test -n "$(which gawk)" ; then
    gawk 'BEGIN {print systime() * 1000; exit;}'
  else
    timeMillisJava
  fi
}

function composite() {
  time=$(timeMillis)
  numSites=$(( ${#sites[*]} / 2 ))
  file=$repo/compositeContent.xml
  xml=""
  for (( i = 0; i < $numSites; i++ )) ; do
    xml="$xml<child location='${sites[i*2]}'/>"
  done

  cat <<EOF > $file
<?xml version='1.0' encoding='UTF-8'?>
<?compositeMetadataRepository version='1.0.0'?>
<repository name='$name'
    type='org.eclipse.equinox.internal.p2.metadata.repository.CompositeMetadataRepository' version='1.0.0'>
  <properties size='1'>
    <property name='p2.timestamp' value='$time'/>
  </properties>
  <children size='$numSites'>
    $xml
  </children>
</repository>
EOF

  file=$repo/compositeArtifacts.xml
  cat <<EOF > $file
<?xml version='1.0' encoding='UTF-8'?>
<?compositeArtifactRepository version='1.0.0'?>
<repository name='$name'
    type='org.eclipse.equinox.internal.p2.artifact.repository.CompositeArtifactRepository' version='1.0.0'>
  <properties size='1'>
    <property name='p2.timestamp' value='$time'/>
  </properties>
  <children size='$numSites'>
    $xml
  </children>
</repository>
EOF
}


sites=(${default_sites[*]}) # ${dev_sites[*]})
mirror 2>&1 | tee mirror.log

sites=(${default_sites[*]})
composite
